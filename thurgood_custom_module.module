<?php
// $Id$
//Created using Brandon Dixon's <brandon.s.dixon@gmail.com> Skeleton Module Generator
/**
* Replace all comments if you would like. Be sure to identify params, files and returns in your comments
*/

// This is mega-ew, but I don't have time for a proper rewrite. :(
function thurgood_custom_module_preprocess_page(&$variables) {
  // Set up layout variable.
  $variables['layout'] = 'none';

  if (!empty($variables['left']) && empty($variables['right']) && empty($variables['mid'])) {
    $variables['layout'] = 'left';
  }

  if (empty($variables['left']) && !empty($variables['right']) && empty($variables['mid'])) {
    $variables['layout'] = 'right';
  }

  if (empty($variables['left']) && !empty($variables['right']) && !empty($variables['mid'])) {
    $variables['layout'] = 'right-mid';
  }

  if (!empty($variables['left']) && !empty($variables['right']) && empty($variables['mid'])) {
    $variables['layout'] = 'both';
  }

  if (!empty($variables['left']) && !empty($variables['mid']) && !empty($variables['right'])) {
    $variables['layout'] = 'all';
  }

  $body = split('"', $variables['body_attributes']);

  $body_classes = '';
  $body_id = '';

  foreach ($body as $key => $value) {
      if ($value == " id=") {
          $body_id = $body[$key+1];
      }
      if ($value == " class=") {
          $body_classes = $body[$key+1];
      }
  }

  $body_classes = split(" ", $body_classes);

  foreach ($body_classes as $key => $value) {
      if ($value  == "registered-user" || $value == "anonymous-user") {
          $body_classes = array_slice($body_classes, 0, $key+1);
          break;
      }
   }

  // Add a class that tells us whether we're on the front page or not.
  $body_classes[] = $variables['is_front'] ? 'front' : 'not-front';
  // Add a class that tells us whether the page is viewed by an authenticated user or not.
  $body_classes[] = $variables['logged_in'] ? 'logged-in' : 'not-logged-in';
  // Add arg(0) to make it possible to theme the page depending on the current page
  // type (e.g. node, admin, user, etc.). To avoid illegal characters in the class,
  // we're removing everything disallowed. We are not using 'a-z' as that might leave
  // in certain international characters (e.g. German umlauts).
  $body_classes[] = preg_replace('![^abcdefghijklmnopqrstuvwxyz0-9-_]+!s', '', 'page-' . form_clean_id(drupal_strtolower(arg(0))));
  // If on an individual node page, add the node type.
  if (isset($variables['node']) && $variables['node']->type) {
    $body_classes[] = 'node-type-' . form_clean_id($variables['node']->type);
  }

  // Add information about the number of sidebars.
  if ($variables['layout'] == 'all') {
    $body_classes[] = 'three-sidebars all';
  }
  else if ($variables['layout'] == 'both') {
    $body_classes[] = 'two-sidebars both';
  }
  elseif ($variables['layout'] == 'none') {
    $body_classes[] = 'no-sidebars';
  }
  elseif ($variables['layout'] == 'right-mid') {
    $body_classes[] = 'two-sidebars right-mid';
  }
  else {
    $body_classes[] = 'one-sidebar sidebar-' . $variables['layout'];
  }

  // Implode with spaces.
  $variables['body_attributes'] = ' class="' . implode(' ', $body_classes) . '"';
  if (!empty($body_id)) {
      $variables['body_attributes'] .= ' id="' . $body_id . '"';
  }
}

function thurgood_custom_module_theme_registry_alter($theme_registry) {

  // Move this one last last last so it can catch changes made by modules and themes.
  $key = array_search('thurgood_custom_module_preprocess_page', $theme_registry['page']['preprocess functions']);
  if ($key) {
    unset($theme_registry['page']['preprocess functions'][$key]);
  }
  $theme_registry['page']['preprocess functions'][] = 'thurgood_custom_module_preprocess_page';
}

// From http://drupal.org/node/617694
/**
 * Implementation of hook_elements().
 *
 * This extends optionwidgets_elements() to add in additional processing.
 * Note that your module must be weighted higher than optionwidgets
 * for this code to take effect.
 */
function thurgood_custom_module_elements() {
  $type['optionwidgets_buttons']['#process'][] = 'remove_radio_na';
  return $type;
}

/**
 * Unset the N/A option on option widget radio buttons.
 */
function remove_radio_na($element) {
  unset($element['value']['#options']['']);
  return $element;
}

/**
  * Implementation of hook_block. 
  */
function thurgood_custom_module_block($op = 'list', $delta = '', $edit = array()) {

  define("ICONPATH", "profiles/thurgood/themes/sky_thurgood/images/Coquette/");

  switch ($op) {

    case 'list':
      $blocks['article'] = array('info' => t('Thurgood: Dashboard Article Block'));
      $blocks['event'] = array('info' => t('Thurgood: Dashboard Event Block'));
      $blocks['place'] = array('info' => t('Thurgood: Dashboard Place Block'));

      $blocks['tutorial'] = array('info' => t('Thurgood: Dashboard Tutorial Block'));

      $blocks['filter'] = array('info' => t('Thurgood: Dashboard Filter Block'));
      $blocks['workflow'] = array('info' => t('Thurgood: Dashboard Workflow Block'));

      $blocks['main'] = array('info' => t('Thurgood: Dashboard Main Block'));
      return $blocks;

    // In case we eventually want to add config options here.
    case 'configure':
      $form = array();
      return $form;

    case 'save':
      return;

    case 'view':

      $type = node_get_types('type', $delta);

      switch ($delta) {
        case 'article':

          $block['content'] = l('<h2 class="dashboard-block">' . t('Article') . '</h2>' . theme_image(ICONPATH . 'Coquette_3/png/128x128/text_page.png', 'Article') . '<p class="dashboard-block">' . $type->description . '</p>',
                                'node/add/article',
                                array('html' => TRUE));
          break;

        case 'event':
          $block['content'] = l('<h2 class="dashboard-block">' . t('Event') . '</h2>' . theme_image(ICONPATH . 'Coquette_3/png/128x128/calendar.png', 'Event') . '<p class="dashboard-block">' . $type->description . '</p>',
                                'node/add/event',
                                array('html' => TRUE));
          break;

        case 'place':
          $block['content'] = l('<h2 class="dashboard-block">' . t('Place') . '</h2>' . theme_image(ICONPATH . 'Coquette_1/png/128x128/globe.png', 'Place') . '<p class="dashboard-block">' . $type->description . '</p>',
                                'node/add/place',
                                array('html' => TRUE));
          break;

        case 'tutorial':
          $block['content'] = l('<h2 class="dashboard-block">' . t('Tutorial') . '</h2>' . theme_image(ICONPATH . 'Coquette_3/png/128x128/help.png', 'Tutorial') . '<p class="dashboard-block">Learn how the ctreentry.info website works here.</p>',
                                'tutorial',
                                array('html' => TRUE));
          break;

        case 'filter':
          $block['content'] = l('<h2 class="dashboard-block">' . t('Filter') . '</h2>' . theme_image(ICONPATH . 'Coquette_3/png/128x128/search_page.png', 'Filter') . '<p class="dashboard-block">View site content and apply filters to narrow down your search.</p>',
                                'admin/content/filter',
                                array('html' => TRUE));
          break;

        case 'workflow':
          $block['content'] = l('<h2 class="dashboard-block">' . t('Workflow') . '</h2>' . theme_image(ICONPATH . 'Coquette_3/png/128x128/page_process.png', 'Workflow') . '<p class="dashboard-block">View the publishing status of content across the site.</p>',
                                'workflow',
                                array('html' => TRUE));
          break;

        case 'main':
          $block['content'] = t('Have a bunch of links here that are the main body.');
          break;

      }
      return $block;
  }
}

// hook_init implementation

// for the validation email message:

function thurgood_custom_module_init() {
  global $user;
  if (!empty($user->roles['10'])) {
     drupal_set_message('You are seeing this message because you haven\'t confirmed your email address yet. 
Certain sections of the site will be inaccessible until you do so. <a href="http://ctreentry.info/toboggan/revalidate/'.$user->uid.'">Click here if you need another copy of your validation email.</a>');
  }

// redirect bounce/* to *; this seems pointless, but lets me have
// multiple menu items in Features that would otherwise conflict!

  $path = check_plain(($_GET['q']));
  $path = explode('/', $path);
  $first = array_shift($path);
  if ($first === "bounce")
  {   
      drupal_goto(implode("/", $path));
  }

}

// hook_form_alter implementation to set the default status of workflow.
function thurgood_custom_module_form_alter(&$form, $form_state, $form_id) {

    if ((isset($form['type']) && isset($form['#node']) && $form['type']['#value'] .'_node_form' == $form_id)) {
        if (isset($form['workflow'])) {

            $node = node_load($form['nid']['#value']);

            // Have to hard code this.
            $wid = 1;
            $workflow = workflow_load($wid);

            $choices = workflow_field_choices($node);
            //This too.  5 is "scheduled to go live", 2 is "draft".
            $value = (isset($choices[5])) ? 5 : 2;

            $current = isset($form_state['values']['workflow']) ? $form_state['values']['workflow'] : false;

            if ($current && isset($choices[$current])) { $value = $current; }

            $form['workflow'][$workflow->name]["#default_value"] = $value;
        }
    }
}
